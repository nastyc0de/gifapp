{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","img","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","id","images","fixed_height_small","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IACnBC,EAAaD,EAAbC,MAAMC,EAAOF,EAAPE,IACZ,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAI,UACnB,2BAAIJ,K,uBCJHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0DAC4CO,UAAUF,GADtD,sDAGDG,MAAMR,GAHL,cAGbS,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAf,GAClB,MAAM,CACFgB,GAAIhB,EAAIgB,GACRf,MAAOD,EAAIC,MACXC,IAAKF,EAAIiB,OAAOC,mBAAmBhB,QAVxB,kBAcZY,GAdY,4CAAH,sDCCPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZrB,mBACtB,CACI2B,KAAK,GACLO,SAAS,IALqB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAXAC,qBAAU,WACPjB,EAAQC,GACFiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,IAGIC,EDhBwBK,CAAanB,GAAhCU,EAFuB,EAE5BJ,KAAaO,EAFe,EAEfA,QAEpB,OACI,oCACI,4BAAKb,GACJa,GAAW,uBAAGjB,UAAU,sDAAb,YAChB,yBAAKA,UAAU,aAGJc,EAAOF,KAAI,SAAAf,GACX,OAAO,kBAAC,EAAD,CACF2B,IAAK3B,EAAIgB,GACThB,IAAKA,UEcd4B,EA3BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CACIA,cAAeA,IAEnB,6BAED,4BAES4C,EAAWd,KAAI,SAAAR,GACf,OAAO,kBAAC,EAAD,CACHA,SAAUA,EACVoB,IAAKpB,U,MChB7BuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9cd42df6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(cats =>[inputValue, ...cats]);\n            setInputValue('');\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSubmit}> \n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n     );\n}\n \nexport default AddCategory;\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({img}) => {\n    const{title,url} = img;\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt=\"title\"/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","\n\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?limit=20&q=${encodeURI(category) }&api_key=mhN3qWSo6zZXyuDHiJSA4odu4EmnFR3E`\n\n    const res = await fetch(url);\n    const {data} = await res.json();\n\n    const gifs = data.map(img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images.fixed_height_small.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className='animate__animated animate__flash animate__delay-2s'>Cargando</p>}\n        <div className='card-grid'>\n            \n               {\n                   images.map(img => {\n                   return <GifGridItem\n                        key={img.id}\n                        img={img}\n                   />               \n                   })\n               }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState(\n        {\n            data:[],\n            loading: true\n        }\n    );\n    useEffect(() => {\n       getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [])\n    \n\n    return state;\n}\n","import React, {Fragment, useState} from 'react';\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Samurai X']);\n\n    return (\n        <Fragment>\n            <h2>GifExpertApp</h2>\n            <AddCategory\n                setCategories={setCategories}\n            />\n            <hr />\n           \n           <ol>\n                {\n                    categories.map(category =>{\n                    return <GifGrid \n                        category={category}\n                        key={category}\n                        />\n                    })\n                }\n\n            </ol>\n        </Fragment>\n     );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// importar los componentes\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}